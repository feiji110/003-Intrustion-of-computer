def binary_search(nums, n):
    # todo

nums_list = [1, 3, 5, 7, 8, 9, 10, 12, 20]
num = int(input())
binary_search(nums_list, num)

# def sequel_search(nums, n):
#     flag = 0
#     for i in range(len(nums)):
#         if (nums[i] == n):
#             flag = 1
#             break
#     if flag == 0:
#         print("不存在")
#     else:
#         print("存在")
#
# nums_list = [1, 3, 5, 7]
# num = int(input())
# sequel_search(nums_list, num)

# # def fun1(n):  定义fun1函数
# # n： 形式参数  形参 只能在函数体内使用
# # 函数声明定义代码
# def fun1(n):
#     return (1+n)*n//2
#     # sum = 0
#     # for i in range(1, n+1):
#     #     sum = sum + i
#     # return sum  # 返回语句，
#
# # fun1(3)  函数调用语句  3  实际参数  实参
# print(fun1(3))

# def bubble_sort(nums):
#     for i in range(len(nums) - 1):
#         for j in range(len(nums) - 1 - i):
#             if nums[j] > nums[j + 1]:
#                 nums[j], nums[j + 1] = nums[j + 1], nums[j]
#
#
# nums1 = [3, 10, 6, 9, 4]
# bubble_sort(nums1)
# print(nums1)
# nums2 = [33, 1, 2, 8, 22, 10, 8, 7]
# bubble_sort(nums2)
# print(nums2)


#   3  10  6  9  4      第几次冒泡     两两比较次数
#   3  6   9  4  10         0              4
#   3  6   4  9  10         1              3
#   3  4   6  9  10         2              2
#   3  4   6  9  10         3              1
#  冒泡次数=len(nums)-1=4    i         len(nums)-1-i
#  冒泡：序列相邻元素依次两两比较，如果当前存储顺序
#       跟预期不符，两个元素位置进行交换
#  长度为n的序列，需要进行n-1次冒泡，就能确定序列有序

# nums = [3, 10, 6, 9, 4]
# for i in range(len(nums)-1):
#     for j in range(len(nums) - 1 - i):
#         if nums[j] > nums[j+1]:
#             nums[j], nums[j+1] = nums[j+1], nums[j]
# print(nums)

# for i in range(len(nums) - 1 - 0):
#     if nums[i] > nums[i+1]:
#         nums[i], nums[i+1] = nums[i+1], nums[i]
#
# for i in range(len(nums) - 1 - 1):
#     if nums[i] > nums[i+1]:
#         nums[i], nums[i+1] = nums[i+1], nums[i]
#
# for i in range(len(nums) - 1 - 2):
#     if nums[i] > nums[i+1]:
#         nums[i], nums[i+1] = nums[i+1], nums[i]
#
# for i in range(len(nums) - 1 - 3):
#     if nums[i] > nums[i+1]:
#         nums[i], nums[i+1] = nums[i+1], nums[i]

# print(nums)


# import random
#
# row = random.randint(1, 9)
# column = random.randint(1, 12)
# if column > 6:
#     print("左边%d排%d列" % (row, column-6))
# else:
#     print("右边%d排%d列" % (row, column))
